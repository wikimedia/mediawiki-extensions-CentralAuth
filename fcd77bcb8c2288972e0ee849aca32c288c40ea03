{
  "comments": [
    {
      "key": {
        "uuid": "6ec1af18_3981afa4",
        "filename": "modules/ext.centralauth.ForeignApi.js",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 221
      },
      "writtenOn": "2015-08-17T15:16:49Z",
      "side": 1,
      "message": "whitespace",
      "revId": "fcd77bcb8c2288972e0ee849aca32c288c40ea03",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_7475fec7",
        "filename": "modules/ext.centralauth.ForeignApi.js",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 417
      },
      "writtenOn": "2015-08-17T17:27:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ec1af18_3981afa4",
      "revId": "fcd77bcb8c2288972e0ee849aca32c288c40ea03",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_f98a47bf",
        "filename": "modules/ext.centralauth.ForeignApi.js",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 221
      },
      "writtenOn": "2015-08-17T15:16:49Z",
      "side": 1,
      "message": "Or too old of a version (that used action\u003dtokens\u0026type\u003dcentralauth instead).",
      "revId": "fcd77bcb8c2288972e0ee849aca32c288c40ea03",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_147cbab3",
        "filename": "modules/ext.centralauth.ForeignApi.js",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 417
      },
      "writtenOn": "2015-08-17T17:27:52Z",
      "side": 1,
      "message": "Hmm, do you think we should try handling that? Or should I just correct the comment here?",
      "parentUuid": "6ec1af18_f98a47bf",
      "revId": "fcd77bcb8c2288972e0ee849aca32c288c40ea03",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_f8cc788e",
        "filename": "modules/ext.centralauth.ForeignApi.js",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 221
      },
      "writtenOn": "2015-08-18T17:02:18Z",
      "side": 1,
      "message": "Chances are it\u0027s not worth worrying about, someone would have to be running a farm that had different versions of CA but wasn\u0027t already massively broken, or somehow manually imported this code on a wiki with an old CA. So I\u0027d just correct the comment.",
      "parentUuid": "6ec1af18_147cbab3",
      "revId": "fcd77bcb8c2288972e0ee849aca32c288c40ea03",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_d3815fc9",
        "filename": "modules/ext.centralauth.ForeignApi.js",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 417
      },
      "writtenOn": "2015-08-18T19:39:19Z",
      "side": 1,
      "message": "Done\n\n…Actually I just noticed that this makes no sense. We\u0027re querying the local wiki here. I\u0027m axing this.\n\n…The \u0027notloggedin\u0027 check also makes little sense, we check if the user is logged in in the constructor.",
      "parentUuid": "6ec1af18_f8cc788e",
      "revId": "fcd77bcb8c2288972e0ee849aca32c288c40ea03",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_79b65787",
        "filename": "modules/ext.centralauth.ForeignApi.js",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 221
      },
      "writtenOn": "2015-08-17T15:16:49Z",
      "side": 1,
      "message": "Can we differentiate the expected and unexpected cases?",
      "revId": "fcd77bcb8c2288972e0ee849aca32c288c40ea03",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_142a7a8f",
        "filename": "modules/ext.centralauth.ForeignApi.js",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 417
      },
      "writtenOn": "2015-08-17T17:27:52Z",
      "side": 1,
      "message": "We can, but the code is still the same.\n\nCurrently we differentiate between \"needs a centralauthtoken for correct behavior\" and \"does need centralauthtoken for correct behavior\". We could instead do \"user is anonymous\", \"foreign wiki doesn\u0027t have CentralAuth\", \"user is logged in on foreign wiki\" and \"needs a centralauthtoken for correct behavior\", but the code for the first three cases would be the same. I don\u0027t think it would be clearer.",
      "parentUuid": "6ec1af18_79b65787",
      "revId": "fcd77bcb8c2288972e0ee849aca32c288c40ea03",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_18c86476",
        "filename": "modules/ext.centralauth.ForeignApi.js",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 221
      },
      "writtenOn": "2015-08-18T17:02:18Z",
      "side": 1,
      "message": "I meant differentiate between \"this error is expected, continue anyway\" and \"some other error occurred that we should report up the chain\".\n\nWhat exactly *are* the expected errors, anyway?",
      "parentUuid": "6ec1af18_142a7a8f",
      "revId": "fcd77bcb8c2288972e0ee849aca32c288c40ea03",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec1af18_13f846e1",
        "filename": "modules/ext.centralauth.ForeignApi.js",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 417
      },
      "writtenOn": "2015-08-18T19:39:19Z",
      "side": 1,
      "message": "I\u0027m not sure if we should be reporting any errors from here, it\u0027s supposed to be transparent, doing it\u0027s best to keep the user logged in. We could maybe barf if we fail to get a centralauthtoken for a logged in user…\n\nIt might be worth documenting somewhere that you should pass  \u0027\u0026assert\u003duser\u0027 when using a ForeignApi and want to ensure that the remote user is logged in. I\u0027ll put it in the doc comments in the core change.",
      "parentUuid": "6ec1af18_18c86476",
      "revId": "fcd77bcb8c2288972e0ee849aca32c288c40ea03",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}