{
  "comments": [
    {
      "key": {
        "uuid": "291c1151_bf741598",
        "filename": "CentralAuthHooks.php",
        "patchSetId": 1
      },
      "lineNbr": 962,
      "author": {
        "id": 204
      },
      "writtenOn": "2013-11-15T22:47:44Z",
      "side": 1,
      "message": "I thought resource loader config was cachable, but it looks like it also includes the user-specific language/skin, and this would be about the same thing. Unless they assume that all anonymous users get the same config?",
      "revId": "9533e23da0d611383b18a898533edec3ea292af9",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "291c1151_ffddad6c",
        "filename": "CentralAuthHooks.php",
        "patchSetId": 1
      },
      "lineNbr": 962,
      "author": {
        "id": 34
      },
      "writtenOn": "2013-11-15T23:19:55Z",
      "side": 1,
      "message": "mw.config is provided in 2 parts.\n\n1) The startup module (runs hook ResourceLoaderGetConfigVars) which is provided site wide for all users (logged-in and not logged-in), cached for at least 5 minutes.\n\n2) OutputPage (runs hook MakeGlobalVariablesScript) which (like all server html output) is per-user and for anonymous users it is cached for \u003e 30 days and they all share the same cache.\n\nBoth #1 and #2 are fragmented by context (such as uselang and useskin).\n\nUsing the ResourceLoaderGetConfigVars hook this will fail badly because the startup module is sessionless, so that\u0027s a strict no-go. Using the other hook through OutputPage might work, but I doubt it.",
      "parentUuid": "291c1151_bf741598",
      "revId": "9533e23da0d611383b18a898533edec3ea292af9",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "291c1151_3fbf45a8",
        "filename": "CentralAuthHooks.php",
        "patchSetId": 1
      },
      "lineNbr": 962,
      "author": {
        "id": 204
      },
      "writtenOn": "2013-11-16T01:01:39Z",
      "side": 1,
      "message": "Thanks Krinkle, that helps.  Brad, I *think* we can actually avoid this by always setting the url to PROTO_RELATIVE. If the user is logged in on loginwiki, but happens to hit http on a site where they\u0027re not logged in, the forceHTTPS cookie for loginwiki *should* redirect the call to //login.wm.o to https, then then checkLoggedIn will see they are logged in and progress accordingly.",
      "parentUuid": "291c1151_ffddad6c",
      "revId": "9533e23da0d611383b18a898533edec3ea292af9",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "291c1151_bf6df505",
        "filename": "CentralAuthHooks.php",
        "patchSetId": 1
      },
      "lineNbr": 970,
      "author": {
        "id": 192
      },
      "writtenOn": "2013-11-16T01:00:58Z",
      "side": 1,
      "message": "This is fundamentally uncacheable unless we basically move all of the GeoIP matching logic to Varnish, isn\u0027t it?",
      "revId": "9533e23da0d611383b18a898533edec3ea292af9",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}